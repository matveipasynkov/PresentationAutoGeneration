import os
import requests
import subprocess
import speech_recognition as sr
from pptx import Presentation

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
PPTX_FILE = "auto_presentation.pptx"
OLLAMA_URL = "http://localhost:11434/api/generate"
MODEL_NAME = "llama3.2"

def recognize_speech():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("\nüé§ –ì–æ–≤–æ—Ä–∏—Ç–µ... (—Å–∫–∞–∂–∏—Ç–µ '—Å—Ç–æ–ø' –¥–ª—è –≤—ã—Ö–æ–¥–∞)")
        audio = r.listen(source, phrase_time_limit=15)
    try:
        return r.recognize_google(audio, language="ru-RU")
    except:
        return ""

def generate_slide_data(text):
    try:
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
        title_prompt = f"""<|begin_of_text|>
        [INST] –í—ã–¥–µ–ª–∏ –æ—Å–Ω–æ–≤–Ω—É—é —Ç–µ–º—É –∏–∑ —Ç–µ–∫—Å—Ç–∞ (3-5 —Å–ª–æ–≤):
        "{text}". –û—Ç–≤–µ—Ç –¥–∞–π —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–π —Ç–µ–º–æ–π –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π. [/INST]
        """
        
        title_response = requests.post(
            OLLAMA_URL,
            json={
                "model": MODEL_NAME,
                "prompt": title_prompt,
                "stream": False,
                "options": {"temperature": 0.3}
            }
        ).json().get("response", "").strip().replace('"', '')

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        content_prompt = f"""<|begin_of_text|>
        [INST] –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π 3 –∫–ª—é—á–µ–≤—ã—Ö –ø—É–Ω–∫—Ç–∞ –¥–ª—è —Å–ª–∞–π–¥–∞ –Ω–∞ —Ç–µ–º—É "{title_response}"
        –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞: "{text}". –§–æ—Ä–º–∞—Ç: –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫. [/INST]
        """
        
        content_response = requests.post(
            OLLAMA_URL,
            json={
                "model": MODEL_NAME,
                "prompt": content_prompt,
                "stream": False,
                "options": {"temperature": 0.5}
            }
        ).json().get("response", "").split("\n")

        return title_response, [line for line in content_response if line.strip()]
    
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        return "–û—à–∏–±–∫–∞", ["–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç"]

def create_slide(presentation, title, content):
    slide_layout = presentation.slide_layouts[1]
    slide = presentation.slides.add_slide(slide_layout)
    slide.shapes.title.text = title[:50]  # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    content_box = slide.placeholders[1]
    for line in content[:3]:  # –ö–æ–Ω—Ç–µ–Ω—Ç (–ø–µ—Ä–≤—ã–µ 3 –ø—É–Ω–∫—Ç–∞)
        content_box.text_frame.add_paragraph().text = line[:100]

def refresh_powerpoint():
    script = f'''
    tell application "Microsoft PowerPoint"
        activate
        close active presentation saving yes
        open POSIX file "{os.path.abspath(PPTX_FILE)}"
        delay 3
        tell active presentation
            set slideCount to count of slides
            if slideCount > 0 then
                set curSlide to slide index of slide range of selection of document window 1
                go to slide view of document window 1 number slideCount
            end if
        end tell
    end tell
    '''
    subprocess.run(["osascript", "-e", script])


def main():
    # –°–æ–∑–¥–∞—ë–º –∏–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é
    if os.path.exists(PPTX_FILE):
        prs = Presentation(PPTX_FILE)
    else:
        prs = Presentation()

    try:
        while True:
            text = recognize_speech().strip()
            if not text:
                continue
            
            print(f"\nüîä –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {text}")
            
            if "—Å—Ç–æ–ø" in text.lower():
                break
            
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–ª–∞–π–¥–∞
            title, content = generate_slide_data(text)
            print(f"\nüìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")
            print("üìå –ö–æ–Ω—Ç–µ–Ω—Ç:", "\n ‚Ä¢ ".join(content))
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–ª–∞–π–¥–∞
            create_slide(prs, title, content)
            
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ PowerPoint
            prs.save(PPTX_FILE)
            refresh_powerpoint()
            print("‚úÖ –°–ª–∞–π–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω!")
            
    finally:
        prs.save(PPTX_FILE)
        print(f"\nüíæ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–∞–∫: {PPTX_FILE}")

if __name__ == "__main__":
    main()
